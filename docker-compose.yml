version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.8.0
    container_name: zookeeper
    restart: always
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    volumes:
      - ./data/zookeeper_data:/bitnami/zookeeper

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    restart: always
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka_data:/bitnami/kafka

  kafka_ui:
    image: provectuslabs/kafka-ui
    hostname: kafka_ui
    container_name: kafka_ui
    restart: always
    networks:
      - kafka-net
    ports:
      - '7000:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_BROKERCONNECT: kafka:29092
    depends_on:
      - kafka
      - zookeeper

volumes:
  zookeeper-data:
  kafka_data:

networks:
  kafka-net:
    name: kafka-net
    driver: bridge